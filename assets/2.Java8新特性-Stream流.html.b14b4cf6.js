import{_ as n,o as s,c as a,a as t}from"./app.099ebd34.js";const p={},e=t(`<h1 id="java8\u65B0\u7279\u6027-stream-api" tabindex="-1"><a class="header-anchor" href="#java8\u65B0\u7279\u6027-stream-api" aria-hidden="true">#</a> Java8\u65B0\u7279\u6027-Stream API</h1><h2 id="_1-stream\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-stream\u7B80\u4ECB" aria-hidden="true">#</a> 1. Stream\u7B80\u4ECB</h2><h4 id="_1-1-\u4EC0\u4E48\u662F\u6D41" tabindex="-1"><a class="header-anchor" href="#_1-1-\u4EC0\u4E48\u662F\u6D41" aria-hidden="true">#</a> 1.1 \u4EC0\u4E48\u662F\u6D41\uFF1F</h4><p><code>\u6D41\u662FJava8\u5F15\u5165\u7684\u5168\u65B0\u6982\u5FF5\uFF0C\u5B83\u7528\u6765\u5904\u7406\u96C6\u5408\u4E2D\u7684\u6570\u636E</code>\uFF0C\u6682\u4E14\u53EF\u4EE5\u628A\u5B83\u7406\u89E3\u4E3A\u4E00\u79CD\u9AD8\u7EA7\u96C6\u5408\u3002</p><p>\u4F17\u6240\u5468\u77E5\uFF0C\u96C6\u5408\u64CD\u4F5C\u975E\u5E38\u9EBB\u70E6\uFF0C\u82E5\u8981\u5BF9\u96C6\u5408\u8FDB\u884C<code>\u7B5B\u9009</code>\u3001<code>\u6295\u5F71</code>\uFF0C\u9700\u8981\u5199\u5927\u91CF\u7684\u4EE3\u7801\uFF0C\u800C<code>\u6D41\u662F\u4EE5\u58F0\u660E\u7684\u5F62\u5F0F\u64CD\u4F5C\u96C6\u5408\uFF0C\u5B83\u5C31\u50CFSQL\u8BED\u53E5\uFF0C\u6211\u4EEC\u53EA\u9700\u544A\u8BC9\u6D41\u9700\u8981\u5BF9\u96C6\u5408\u8FDB\u884C\u4EC0\u4E48\u64CD\u4F5C\uFF0C\u5B83\u5C31\u4F1A\u81EA\u52A8\u8FDB\u884C\u64CD\u4F5C\uFF0C\u5E76\u5C06\u6267\u884C\u7ED3\u679C\u4EA4\u7ED9\u4F60\uFF0C\u65E0\u9700\u6211\u4EEC\u81EA\u5DF1\u624B\u5199\u4EE3\u7801</code>\u3002</p><p>\u56E0\u6B64\uFF0C\u6D41\u7684\u96C6\u5408\u64CD\u4F5C\u5BF9\u6211\u4EEC\u6765\u8BF4\u662F\u900F\u660E\u7684\uFF0C\u6211\u4EEC\u53EA\u9700\u5411\u6D41\u4E0B\u8FBE\u547D\u4EE4\uFF0C\u5B83\u5C31\u4F1A\u81EA\u52A8\u628A\u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u679C\u7ED9\u6211\u4EEC\u3002\u7531\u4E8E\u64CD\u4F5C\u8FC7\u7A0B\u5B8C\u5168\u7531Java\u5904\u7406\uFF0C\u56E0\u6B64\u5B83\u53EF\u4EE5\u6839\u636E\u5F53\u524D\u786C\u4EF6\u73AF\u5883\u9009\u62E9\u6700\u4F18\u7684\u65B9\u6CD5\u5904\u7406\uFF0C\u6211\u4EEC\u4E5F\u65E0\u9700\u7F16\u5199\u590D\u6742\u53C8\u5BB9\u6613\u51FA\u9519\u7684\u591A\u7EBF\u7A0B\u4EE3\u7801\u4E86\u3002</p><blockquote><p>\u603B\u7ED3</p></blockquote><p>\u6D41\u4F7F\u7528\u4E8E\u64CD\u4F5C\u6570\u636E\u6E90(\u96C6\u5408.\u6570\u7EC4\u7B49)\u6240\u751F\u6210\u7684\u5143\u7D20\u5E8F\u5217. <code>\u96C6\u5408\u5C06\u7684\u662F\u6570\u636E,\u6D41\u8BB2\u7684\u662F\u8BA1\u7B97</code>.</p><blockquote><p>\u6CE8\u610F</p></blockquote><p>\u2460 Stream \u81EA\u5DF1\u4E0D\u4F1A\u5B58\u50A8\u5143\u7D20 <code>(\u4E0D\u662F\u6570\u636E\u7ED3\u6784\uFF0C\u4E0D\u4F1A\u4FDD\u5B58\u6570\u636E)</code></p><p>\u2461 Stream \u4E0D\u4F1A\u6539\u53D8<code>\u6E90\u5BF9\u8C61</code>. \u76F8\u53CD,\u4ED6\u4EEC\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6301\u6709\u7ED3\u679C\u7684<code>\u65B0Stream</code>.</p><p>\u2462 Stream \u64CD\u4F5C\u662F <code>\u5EF6\u8FDF\u6267\u884C</code> \u7684. \u8FD9\u610F\u5473\u7740\u4ED6\u4EEC\u4F1A\u7B49\u5230\u9700\u8981\u7ED3\u679C\u7684\u65F6\u5019\u624D\u6267\u884C.</p><h3 id="_1-2-\u6D41\u7684\u64CD\u4F5C\u79CD\u7C7B" tabindex="-1"><a class="header-anchor" href="#_1-2-\u6D41\u7684\u64CD\u4F5C\u79CD\u7C7B" aria-hidden="true">#</a> 1.2 \u6D41\u7684\u64CD\u4F5C\u79CD\u7C7B</h3><blockquote><p>\u521B\u5EFA Stream</p></blockquote><p>\u4E00\u4E2A\u6570\u636E\u6E90 (\u96C6\u5408,\u6570\u7EC4\u7B49) , \u83B7\u53D6\u4E00\u4E2A\u6D41.</p><blockquote><p><code>\u4E2D\u95F4\u64CD\u4F5C</code></p></blockquote><p>\u5F53\u6570\u636E\u6E90\u4E2D\u7684\u6570\u636E\u4E0A\u4E86\u6D41\u6C34\u7EBF\u540E\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u5BF9\u6570\u636E\u8FDB\u884C\u7684\u6240\u6709\u64CD\u4F5C\u90FD\u79F0\u4E3A <code>\u201C\u4E2D\u95F4\u64CD\u4F5C\u201D</code>\u3002 \u4E2D\u95F4\u64CD\u4F5C\u4ECD\u7136\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6D41\u5BF9\u8C61\uFF0C\u56E0\u6B64<code>\u591A\u4E2A\u4E2D\u95F4\u64CD\u4F5C\u53EF\u4EE5\u4E32\u8FDE\u8D77\u6765\u5F62\u6210\u4E00\u4E2A\u6D41\u6C34\u7EBF</code>\u3002<u>\u9664\u975E\u6D41\u6C34\u7EBF\u4E0A\u89E6\u53D1\u7EC8\u6B62\u64CD\u4F5C,\u5426\u5219\u4E2D\u95F4\u64CD\u4F5C\u4E0D\u4F1A\u6267\u884C\u4EFB\u4F55\u7684\u5904\u7406! \u800C\u5728\u7EC8\u6B62\u64CD\u4F5C\u662F\u4E00\u6B21\u6027\u5168\u90E8\u5904\u7406,\u6210\u4E3A <code>&quot;\u60F0\u6027\u6C42\u503C&quot;</code></u></p><blockquote><p><code>\u7EC8\u7AEF\u64CD\u4F5C(\u7EC8\u6B62\u64CD\u4F5C)</code></p></blockquote><p>\u5F53\u6240\u6709\u7684\u4E2D\u95F4\u64CD\u4F5C\u5B8C\u6210\u540E\uFF0C\u82E5\u8981\u5C06\u6570\u636E\u4ECE\u6D41\u6C34\u7EBF\u4E0A\u62FF\u4E0B\u6765\uFF0C\u5219\u9700\u8981\u6267\u884C\u7EC8\u7AEF\u64CD\u4F5C\u3002 \u7EC8\u7AEF\u64CD\u4F5C\u5C06\u8FD4\u56DE\u4E00\u4E2A\u6267\u884C\u7ED3\u679C\uFF0C\u8FD9\u5C31\u662F\u4F60\u60F3\u8981\u7684\u6570\u636E\u3002</p><p><img src="https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202010/02/164542-789518.png" alt=""></p><h2 id="_2-stream-\u521B\u5EFA\u6D41" tabindex="-1"><a class="header-anchor" href="#_2-stream-\u521B\u5EFA\u6D41" aria-hidden="true">#</a> 2. Stream \u521B\u5EFA\u6D41</h2><blockquote><p>\u96C6\u5408\u6D41</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u901A\u8FC7 Collection \u7CFB\u5217\u96C6\u5408\u63D0\u4F9B\u7684 stream() \u6216 parallelStream()</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u53D6\u4E00\u4E2A\u987A\u5E8F\u6D41</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stream1 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u53D6\u4E00\u4E2A\u5E76\u884C\u6D41</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> parallelStream <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6570\u7EC4\u6D41: <code>Arrays.stream()</code></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u901A\u8FC7 Arrays \u4E2D\u7684\u9759\u6001\u65B9\u6CD5stream()\u83B7\u53D6</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stream2 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>strings<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Stream \u7C7B\u4E2D\u7684\u9759\u6001\u65B9\u6CD5 <code>of()\u3001iterate()\u3001generate()</code></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u901A\u8FC7 Stream \u7C7B\u4E2D\u7684\u9759\u6001\u65B9\u6CD5 of</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">&gt;</span></span> stream3 <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u9650\u6D41</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stream2 <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">iterate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FED\u4EE3</span>
stream2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> stream3 <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token operator">::</span><span class="token function">random</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u751F\u6210</span>
stream3<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u65E0\u9650\u6D41</p></blockquote><ol><li>\u8FED\u4EE3 <code>iterate()</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stream4 <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">iterate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>\u751F\u6210 <code>generate()</code></li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token operator">::</span><span class="token function">random</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\u6587\u4EF6\u751F\u6210\u6D41 <code>BufferedReader.lines()</code></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">&quot;F:\\\\test_stream.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">&gt;</span></span> lineStream <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lineStream<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5B57\u7B26\u4E32\u5206\u9694\u6210\u6D41: <code>Pattern.splitAsStream()</code></p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">&gt;</span></span> stringStream <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">splitAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;a,b,c,d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stringStream<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u751F\u6210\u7A7A\u6D41</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> empty <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\u6570\u503C\u8303\u56F4\u751F\u6210\u6D41</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u751F\u62100\u523010\u7684int\u6D41</span>
<span class="token class-name">IntStream</span> intStream <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u751F\u62100\u52309\u7684int\u6D41</span>
<span class="token class-name">IntStream</span> intStream1 <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u624B\u52A8\u751F\u6210\u6D41</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u751F\u6210\u6709\u5B57\u7B26\u4E32a\u548C\u6570\u5B571\u7684\u5F02\u6784\u7684\u6D41</span>
<span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-stream-\u4E2D\u95F4\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-stream-\u4E2D\u95F4\u64CD\u4F5C" aria-hidden="true">#</a> 3. Stream \u4E2D\u95F4\u64CD\u4F5C</h2><h3 id="_3-1-\u7B5B\u9009\u4E0E\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#_3-1-\u7B5B\u9009\u4E0E\u5207\u7247" aria-hidden="true">#</a> 3.1 \u7B5B\u9009\u4E0E\u5207\u7247</h3><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>filter(Predicate p)</strong></td><td>\u63A5\u6536 Lambda \uFF0C \u4ECE\u6D41\u4E2D\u6392\u9664\u67D0\u4E9B\u5143\u7D20\u3002</td></tr><tr><td style="text-align:center;"><strong>distinct()</strong></td><td>\u7B5B\u9009\uFF0C\u901A\u8FC7\u6D41\u6240\u751F\u6210\u5143\u7D20\u7684 hashCode() \u548C equals() \u53BB\u9664\u91CD\u590D\u5143\u7D20</td></tr><tr><td style="text-align:center;"><strong>limit(long maxSize)</strong></td><td>\u622A\u65AD\u6D41\uFF0C\u4F7F\u5176\u5143\u7D20\u4E0D\u8D85\u8FC7\u7ED9\u5B9A\u6570\u91CF\u3002</td></tr><tr><td style="text-align:center;"><strong>skip(long n)</strong></td><td>\u8DF3\u8FC7\u5143\u7D20\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6254\u6389\u4E86\u524D n \u4E2A\u5143\u7D20\u7684\u6D41\u3002\u82E5\u6D41\u4E2D\u5143\u7D20</td></tr></tbody></table><blockquote><p><code>filter</code>\u2014\u2014\u63A5\u6536 Lambda \uFF0C \u4ECE\u6D41\u4E2D\u6392\u9664\u67D0\u4E9B\u5143\u7D20\u3002</p></blockquote><ol><li>\u5185\u90E8\u8FED\u4EE3</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">screeningAndSlicing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E2D\u95F4\u64CD\u4F5C</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> stream <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5E74\u9F84\u5927\u4E8E35</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53EA\u6709\u5F53\u505A\u7EC8\u6B62\u64CD\u4F5C\u65F6\uFF0C\u6240\u6709\u7684\u4E2D\u95F4\u64CD\u4F5C\u4F1A\u4E00\u6B21\u6027\u7684\u5168\u90E8\u6267\u884C\uFF0C\u79F0\u4E3A\u201C\u60F0\u6027\u6C42\u503C\u201D</span>
    stream<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5185\u90E8\u8FED\u4EE3</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5916\u90E8\u8FED\u4EE3</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">screeningAndSlicing2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>limit</code>\u2014\u2014\u622A\u65AD\u6D41\uFF0C\u4F7F\u5176\u5143\u7D20\u4E0D\u8D85\u8FC7\u7ED9\u5B9A\u6570\u91CF\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">screeningAndSlicing3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u77ED\u8DEF\uFF01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &amp;&amp;  ||</span>
                <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5000</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>skip(n)</code> \u2014\u2014 \u8DF3\u8FC7\u5143\u7D20\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6254\u6389\u4E86\u524D n \u4E2A\u5143\u7D20\u7684\u6D41\u3002\u82E5\u6D41\u4E2D\u5143\u7D20\u4E0D\u8DB3 n \u4E2A\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u6D41\u3002\u4E0E limit(n) \u4E92\u8865</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">screeningAndSlicing4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5000</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>distinct</code>\u2014\u2014\u7B5B\u9009\uFF0C\u901A\u8FC7\u6D41\u6240\u751F\u6210\u5143\u7D20\u7684 <code>hashCode()</code> \u548C <code>equals()</code> \u53BB\u9664\u91CD\u590D\u5143\u7D20</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">screeningAndSlicing5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// distinct\u2014\u2014\u7B5B\u9009\uFF0C\u901A\u8FC7\u6D41\u6240\u751F\u6210\u5143\u7D20\u7684 hashCode() \u548C equals() \u53BB\u9664\u91CD\u590D\u5143\u7D20</span>
    employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5000</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#_3-2-\u6620\u5C04" aria-hidden="true">#</a> 3.2 \u6620\u5C04</h3><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><code>map(Function f)</code></td><td>\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u88AB\u5E94\u7528\u5230\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF0C\u5E76\u5C06\u5176\u6620\u5C04\u6210\u4E00\u4E2A\u65B0\u7684\u5143\u7D20\u3002</td></tr><tr><td style="text-align:center;"><strong>mapToDouble(ToDoubleFunction f)</strong></td><td>\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u88AB\u5E94\u7528\u5230\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF0C\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684 DoubleStream\u3002</td></tr><tr><td style="text-align:center;"><strong>mapToInt(ToIntFunction f)</strong></td><td>\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u88AB\u5E94\u7528\u5230\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF0C\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684 IntStream\u3002</td></tr><tr><td style="text-align:center;"><strong>mapToLong(ToLongFunction f)</strong></td><td>\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u88AB\u5E94\u7528\u5230\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF0C\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684 LongStream\u3002</td></tr><tr><td style="text-align:center;"><code>flatMap(Function f)</code></td><td>\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5C06\u6D41\u4E2D\u7684\u6BCF\u4E2A\u503C\u90FD\u6362\u6210\u53E6\u4E00\u4E2A\u6D41\uFF0C\u7136\u540E\u628A\u6240\u6709\u6D41\u8FDE\u63A5\u6210\u4E00\u4E2A\u6D41</td></tr></tbody></table><blockquote><p><code>map</code>\u2014\u2014\u63A5\u6536 Lambda \uFF0C \u5C06\u5143\u7D20\u8F6C\u6362\u6210\u5176\u4ED6\u5F62\u5F0F\u6216\u63D0\u53D6\u4FE1\u606F\u3002\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u4F1A\u88AB\u5E94\u7528\u5230\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF0C\u5E76\u5C06\u5176\u6620\u5C04\u6210\u4E00\u4E2A\u65B0\u7684\u5143\u7D20\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ddd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;eee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// str -&gt; str.toUpperCase() \u8F6C\u6362\u4E3A\u5927\u5199</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">toUpperCase</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>flatMap</code>\u2014\u2014\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5C06\u6D41\u4E2D\u7684\u6BCF\u4E2A\u503C\u90FD\u6362\u6210\u53E6\u4E00\u4E2A\u6D41\uFF0C\u7136\u540E\u628A\u6240\u6709\u6D41\u8FDE\u63A5\u6210\u4E00\u4E2A\u6D41</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Map</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stream</span><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> stream1 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u7C7B\u540D::\u9759\u6001\u65B9\u6CD5</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">StreamApiTest02</span><span class="token operator">::</span><span class="token function">filterCharacter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stream1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>sm <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    sm<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F18\u5316\u4E0A\u9762</span>
<span class="token comment">// flatMap</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> stream2 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u7C7B\u540D::\u9759\u6001\u65B9\u6CD5</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">StreamApiTest02</span><span class="token operator">::</span><span class="token function">filterCharacter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stream2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9759\u6001\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> <span class="token function">filterCharacter</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Character</span> ch <span class="token operator">:</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_3-3-\u6392\u5E8F" aria-hidden="true">#</a> 3.3 \u6392\u5E8F</h3><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>sorted()</strong></td><td>\u4EA7\u751F\u4E00\u4E2A\u65B0\u6D41\uFF0C\u5176\u4E2D\u6309<code>\u81EA\u7136\u987A\u5E8F\u6392\u5E8F</code></td></tr><tr><td style="text-align:center;"><strong>sorted(Comparator comp)</strong></td><td>\u4EA7\u751F\u4E00\u4E2A\u65B0\u6D41\uFF0C\u5176\u4E2D\u6309<code>\u6BD4\u8F83\u5668\u987A\u5E8F\u6392\u5E8F</code></td></tr></tbody></table><blockquote><p><code>sorted()</code>\u2014\u2014\u81EA\u7136\u6392\u5E8F(Comparable)</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ddd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;eee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u81EA\u7136\u6392\u5E8F</span>
list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>sorted(Comparator com)</code>\u2014\u2014\u5B9A\u5236\u6392\u5E8F(Comparator)</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> e2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> e1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>e2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-stream-\u7EC8\u6B62\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_4-stream-\u7EC8\u6B62\u64CD\u4F5C" aria-hidden="true">#</a> 4. Stream \u7EC8\u6B62\u64CD\u4F5C</h2><h3 id="_4-1-\u67E5\u627E\u4E0E\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_4-1-\u67E5\u627E\u4E0E\u5339\u914D" aria-hidden="true">#</a> 4.1 \u67E5\u627E\u4E0E\u5339\u914D</h3><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>allMatch(Predicate p)</strong></td><td>\u68C0\u67E5\u662F\u5426\u5339\u914D\u6240\u6709\u5143\u7D20</td></tr><tr><td style="text-align:center;"><strong>anyMatch(Predicate p)</strong></td><td>\u68C0\u67E5\u662F\u5426\u81F3\u5C11\u5339\u914D\u4E00\u4E2A\u5143\u7D20</td></tr><tr><td style="text-align:center;"><strong>noneMatch(Predicate p)</strong></td><td>\u68C0\u67E5\u662F\u5426\u6CA1\u6709\u5339\u914D\u6240\u6709\u5143\u7D20</td></tr><tr><td style="text-align:center;"><strong>findFirst()</strong></td><td>\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5143\u7D20</td></tr><tr><td style="text-align:center;"><strong>findAny()</strong></td><td>\u8FD4\u56DE\u5F53\u524D\u6D41\u4E2D\u7684\u4EFB\u610F\u5143\u7D20</td></tr><tr><td style="text-align:center;"><strong>count</strong></td><td>\u8FD4\u56DE\u6D41\u4E2D\u5143\u7D20\u603B\u6570</td></tr><tr><td style="text-align:center;"><strong>max(Comparator c)</strong></td><td>\u8FD4\u56DE\u6D41\u4E2D\u5927\u503C</td></tr><tr><td style="text-align:center;"><strong>min(Comparator c)</strong></td><td>\u8FD4\u56DE\u6D41\u4E2D\u6700\u5C0F\u503C</td></tr><tr><td style="text-align:center;"><strong>forEach(Consumer c)</strong></td><td><code>\u5185\u90E8\u8FED\u4EE3</code>(\u4F7F\u7528 Collection \u63A5\u53E3\u9700\u8981\u7528\u6237\u53BB\u505A\u8FED\u4EE3\uFF0C\u79F0\u4E3A <code>\u5916\u90E8\u8FED\u4EE3</code>\u3002\u76F8\u53CD\uFF0CStream API \u4F7F\u7528\u5185\u90E8 \u8FED\u4EE3\u2014\u2014\u5B83\u5E2E\u4F60\u628A\u8FED\u4EE3\u505A\u4E86)</td></tr></tbody></table><blockquote><p><code>allMatch</code>\u2014\u2014\u68C0\u67E5\u662F\u5426\u5339\u914D\u6240\u6709\u5143\u7D20</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> b1 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">BUSY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>anyMatch</code>\u2014\u2014\u68C0\u67E5\u662F\u5426\u81F3\u5C11\u5339\u914D\u4E00\u4E2A\u5143\u7D20</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> b2 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">anyMatch</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">BUSY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>noneMatch</code>\u2014\u2014\u68C0\u67E5\u662F\u5426\u6CA1\u6709\u5339\u914D\u7684\u5143\u7D20</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> b3 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">noneMatch</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">BUSY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>findFirst</code>\u2014\u2014\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5143\u7D20</p></blockquote><p>\u5DE5\u8D44\u6392\u5E8F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> opA <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5DE5\u8D44\u6392\u5E8F \u6B63\u5E8F</span>
        <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>opA<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>opA<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> opD <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5DE5\u8D44\u6392\u5E8F  \u5012\u5E8F</span>
        <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token operator">-</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>opD<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>opD<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>max(),min()</code> \u4F18\u5316</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> op1 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingDouble</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
op1<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> op2 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingDouble</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
op2<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>findAny</code>\u2014\u2014\u8FD4\u56DE\u5F53\u524D\u6D41\u4E2D\u7684\u4EFB\u610F\u5143\u7D20</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> any <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">FREE</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
any<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>count</code>\u2014\u2014\u8FD4\u56DE\u6D41\u4E2D\u5143\u7D20\u7684\u603B\u4E2A\u6570</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">long</span> count <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>max</code>\u2014\u2014\u8FD4\u56DE\u6D41\u4E2D\u6700\u5927\u503C</p></blockquote><p>\u83B7\u53D6\u6700\u5927\u5DE5\u8D44\u5458\u5DE5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> max <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>max<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F18\u5316:</p><ol><li>\u65B9\u5F0F\u4E00</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> max1 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingDouble</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
max1<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u65B9\u5F0F\u4E8C \u6700\u5927\u5DE5\u8D44</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> max2 <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token operator">::</span><span class="token function">compare</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
max2<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>min</code>\u2014\u2014\u8FD4\u56DE\u6D41\u4E2D\u6700\u5C0F\u503C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> min <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>max<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>min<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-\u89C4\u7EA6" tabindex="-1"><a class="header-anchor" href="#_4-2-\u89C4\u7EA6" aria-hidden="true">#</a> 4.2 \u89C4\u7EA6</h3><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>reduce(T iden, BinaryOperator b)</strong></td><td>\u53EF\u4EE5\u5C06\u6D41\u4E2D\u5143\u7D20\u53CD\u590D\u7ED3\u5408\u8D77\u6765\uFF0C\u5F97\u5230\u4E00\u4E2A\u503C\u3002\u8FD4\u56DE T</td></tr><tr><td style="text-align:center;"><strong>reduce(BinaryOperator b)</strong></td><td>\u53EF\u4EE5\u5C06\u6D41\u4E2D\u5143\u7D20\u53CD\u590D\u7ED3\u5408\u8D77\u6765\uFF0C\u5F97\u5230\u4E00\u4E2A\u503C\u3002\u8FD4\u56DE <code>Optional&lt;T&gt;</code></td></tr></tbody></table><blockquote><p><code>reduce(T identity, BinaryOperator)</code>\u2014\u2014\u53EF\u4EE5\u5C06\u6D41\u4E2D\u5143\u7D20\u53CD\u590D\u7ED3\u5408\u8D77\u6765\uFF0C\u5F97\u5230\u4E00\u4E2A\u503C\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Integer</span> sum <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// \u53C2\u6570\u4E00: \u8D77\u59CB\u503C</span>
        <span class="token comment">// (x,y)-&gt; x+y[\u6C42\u548C] \u8F6C\u6362\u4E3A Integer::sum</span>
        <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>reduce(BinaryOperator)</code> \u2014\u2014\u53EF\u4EE5\u5C06\u6D41\u4E2D\u5143\u7D20\u53CD\u590D\u7ED3\u5408\u8D77\u6765\uFF0C\u5F97\u5230\u4E00\u4E2A\u503C,\u8FD4\u56DE <code>Optional&lt;T&gt;</code>\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> reduce <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token operator">::</span><span class="token function">sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
reduce<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-\u6536\u96C6" tabindex="-1"><a class="header-anchor" href="#_4-3-\u6536\u96C6" aria-hidden="true">#</a> 4.3 \u6536\u96C6</h3><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>collect(Collector c)</strong></td><td>\u5C06\u6D41\u8F6C\u6362\u4E3A\u5176\u4ED6\u5F62\u5F0F\u3002\u63A5\u6536\u4E00\u4E2A Collector\u63A5\u53E3\u7684\u5B9E\u73B0\uFF0C\u7528\u4E8E\u7ED9Stream\u4E2D\u5143\u7D20\u505A\u6C47\u603B\u7684\u65B9\u6CD5</td></tr></tbody></table><p>Collector \u63A5\u53E3\u4E2D\u65B9\u6CD5\u7684\u5B9E\u73B0\u51B3\u5B9A\u4E86\u5982\u4F55\u5BF9\u6D41\u6267\u884C\u6536\u96C6\u64CD\u4F5C(\u5982\u6536\u96C6\u5230 List\u3001Set\u3001Map)\u3002\u4F46\u662F <code>Collectors</code> \u5B9E\u7528\u7C7B\u63D0\u4F9B\u4E86\u5F88\u591A\u9759\u6001\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u65B9\u4FBF\u5730\u521B\u5EFA\u5E38\u89C1\u6536\u96C6\u5668\u5B9E\u4F8B\uFF0C\u5177\u4F53\u65B9\u6CD5\u4E0E\u5B9E\u4F8B\u5982\u4E0B\u8868\uFF1A</p><table><thead><tr><th style="text-align:center;">\u65B9\u6CD5</th><th style="text-align:center;">\u8FD4\u56DE\u7C7B\u578B</th><th>\u4F5C\u7528</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>toList</strong></td><td style="text-align:center;">List(T)</td><td>\u628A\u6D41\u4E2D\u5143\u7D20\u6536\u96C6\u5230List</td></tr><tr><td style="text-align:center;"><strong>toSet</strong></td><td style="text-align:center;">Set(T)</td><td>\u628A\u6D41\u4E2D\u5143\u7D20\u6536\u96C6\u5230Set</td></tr><tr><td style="text-align:center;"><strong>toCollection</strong></td><td style="text-align:center;">Collection(T)</td><td>\u628A\u6D41\u4E2D\u5143\u7D20\u6536\u96C6\u5230\u521B\u5EFA\u7684\u96C6\u5408</td></tr><tr><td style="text-align:center;"><strong>counting</strong></td><td style="text-align:center;">Long</td><td>\u8BA1\u7B97\u6D41\u4E2D\u5143\u7D20\u7684\u4E2A\u6570</td></tr><tr><td style="text-align:center;"><strong>averagingDouble</strong></td><td style="text-align:center;">Double</td><td>\u5E73\u5747\u503C</td></tr><tr><td style="text-align:center;"><strong>averagingInt</strong></td><td style="text-align:center;">Integer</td><td></td></tr><tr><td style="text-align:center;"><strong>averagingLong</strong></td><td style="text-align:center;">Long</td><td></td></tr><tr><td style="text-align:center;"><strong>summingInt</strong></td><td style="text-align:center;">Integer</td><td>\u5BF9\u6D41\u4E2D\u5143\u7D20\u7684\u6574\u6570\u5C5E\u6027\u6C42\u548C</td></tr><tr><td style="text-align:center;"><strong>summingDouble</strong></td><td style="text-align:center;">Double</td><td></td></tr><tr><td style="text-align:center;"><strong>summingLong</strong></td><td style="text-align:center;">Long</td><td></td></tr><tr><td style="text-align:center;"><strong>summarizingDouble</strong></td><td style="text-align:center;">DoubleSummaryStatistics</td><td>\u7528\u4E8Eint\u3001long\u3001double\u7C7B\u578B\u6570\u636E\u4E00\u4E2A\u6C42\u603B\u64CD\u4F5C</td></tr><tr><td style="text-align:center;"><strong>summarizingInt</strong></td><td style="text-align:center;"></td><td></td></tr><tr><td style="text-align:center;"><strong>summarizingLong</strong></td><td style="text-align:center;"></td><td></td></tr><tr><td style="text-align:center;"><strong>joining</strong></td><td style="text-align:center;">String</td><td>\u8FDE\u63A5\u6D41\u4E2D\u6BCF\u4E2A\u5B57\u7B26\u4E32</td></tr><tr><td style="text-align:center;"><strong>maxBy</strong></td><td style="text-align:center;">Optional(T)</td><td>\u6839\u636E\u6BD4\u8F83\u5668\u9009\u62E9\u6700\u5927\u503C</td></tr><tr><td style="text-align:center;"><strong>minBy</strong></td><td style="text-align:center;">Optional(T)</td><td>\u6839\u636E\u6BD4\u8F83\u5668\u9009\u62E9\u6700\u5C0F\u503C</td></tr><tr><td style="text-align:center;"><strong>reducing</strong></td><td style="text-align:center;">\u5F52\u7EA6\u4EA7\u751F\u7684\u7C7B\u578B</td><td>\u4ECE\u4E00\u4E2A\u4F5C\u4E3A\u7D2F\u52A0\u5668\u7684\u521D\u59CB\u503C\u5F00\u59CB\uFF0C\u5229\u7528BinaryOperator\u4E0E\u6D41\u4E2D\u5143\u7D20\u9010\u4E2A\u7ED3\u5408\uFF0C\u4ECE\u800C\u5F52\u7EA6\u6210\u5355\u4E2A\u503C</td></tr><tr><td style="text-align:center;"><strong>collectingAndThen</strong></td><td style="text-align:center;">\u8F6C\u6362\u51FD\u6570\u8FD4\u56DE\u7684\u7C7B\u578B</td><td>\u5305\u88F9\u53E6\u4E00\u4E2A\u6536\u96C6\u5668\uFF0C\u5BF9\u5176\u7ED3\u679C\u8F6C\u6362\u51FD\u6570</td></tr><tr><td style="text-align:center;"><strong>groupingBy</strong></td><td style="text-align:center;">Map(K, List(T))</td><td>\u6839\u636E\u67D0\u5C5E\u6027\u503C\u5BF9\u6D41\u5206\u7EC4\uFF0C\u5C5E\u6027\u4E3AK\uFF0C\u7ED3\u679C\u4E3AV</td></tr><tr><td style="text-align:center;"><strong>partitioningBy</strong></td><td style="text-align:center;">Map(Boolean, List(T))</td><td>\u6839\u636Etrue\u6216false\u8FDB\u884C\u5206\u533A</td></tr></tbody></table><p>\u6CE8\u610F\uFF1A\u4E3A\u907F\u514Dmarkdown\u683C\u5F0F\u51B2\u7A81\uFF0C\u4E0A\u9762\u8FD4\u56DE\u7C7B\u578B\u4E2D\u6240\u6709\u7684()\u90FD\u662F\u4EE3\u8868&lt;&gt; . \u6BD4\u5982 List(T) \u6307\u7684\u662F <code>List&lt;T&gt;</code>.</p><blockquote><p>toList</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>toSet</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>toCollection</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toCollection</span><span class="token punctuation">(</span><span class="token class-name">HashSet</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
collect<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>counting</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Long</span> count <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">counting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>averagingDouble \u5E73\u5747\u503C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Double</span> avg <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">averagingDouble</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>avg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>summingDouble \u603B\u548C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Double</span> summ <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">summingDouble</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>summ<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>maxBy \u6700\u5927\u503C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> max <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">maxBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
max<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>minBy \u6700\u5C0F\u503C</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> min <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">minBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
min<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>groupingBy \u5206\u7EC4</p></blockquote><ol><li>\u5206\u7EC4</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> groupBy <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>groupBy<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u591A\u7EA7\u5206\u7EC4</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> <span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">35</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">&quot;\u9752\u5E74&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">&quot;\u4E2D\u5E74&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">&quot;\u8001\u5E74&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>partitioningBy \u5206\u533A</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> partitioningBy <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">partitioningBy</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>partitioningBy<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>summarizingDouble</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DoubleSummaryStatistics</span> dss <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">summarizingDouble</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getSalary</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u603B\u548C : &quot;</span> <span class="token operator">+</span> dss<span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u91CF : &quot;</span> <span class="token operator">+</span> dss<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E73\u5747\u503C : &quot;</span> <span class="token operator">+</span> dss<span class="token punctuation">.</span><span class="token function">getAverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u5927\u503C : &quot;</span> <span class="token operator">+</span> dss<span class="token punctuation">.</span><span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u5C0F\u503C : &quot;</span> <span class="token operator">+</span> dss<span class="token punctuation">.</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>joining \u8FDE\u63A5</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> employeeList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;===&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;===&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2><blockquote><p>\u5B9E\u4F53\u7C7B</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">double</span> salary<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">Status</span> status<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> <span class="token keyword">double</span> salary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token string">&quot;\u6D4B\u8BD5\u65B9\u6CD5\u5F15\u7528\uFF01&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Status</span><span class="token punctuation">{</span>
		<span class="token doc-comment comment">/**
		 * \u7A7A\u95F2
		 */</span>
		<span class="token constant">FREE</span><span class="token punctuation">,</span>

		<span class="token doc-comment comment">/**
		 * \u5FD9\u788C
		 */</span>
		<span class="token constant">BUSY</span><span class="token punctuation">,</span>

		<span class="token doc-comment comment">/**
		 * \u4F11\u5047
		 */</span>
		<span class="token constant">VOCATION</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8: \u6B64\u5904\u4F7F\u7528 <code>\u201Clombok\u201D</code>.</p><blockquote><p>\u96C6\u5408</p></blockquote><p>3.1 / 3.2</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employeeList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6666.66</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">9999.99</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">3333.33</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7777.77</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7777.77</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7777.77</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7530\u4E03&quot;</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">5555.55</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employeeList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6666.66</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">BUSY</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">9999.99</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">FREE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">3333.33</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">VOCATION</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7777.77</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">BUSY</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7777.77</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">FREE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7777.77</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">FREE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7530\u4E03&quot;</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">5555.55</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">BUSY</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,145),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","2.Java8\u65B0\u7279\u6027-Stream\u6D41.html.vue"]]);export{k as default};
