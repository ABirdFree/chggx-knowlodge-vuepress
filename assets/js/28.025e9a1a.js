(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{351:function(v,t,a){"use strict";a.r(t);var _=a(7),o=Object(_.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"jvm-本地方法栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-本地方法栈"}},[v._v("#")]),v._v(" JVM-本地方法栈")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Java虚拟机栈用于管理Java方法的调用，而本地方法栈用于管理本地方法的调用。")])])]),v._v(" "),t("li",[t("p",[v._v("本地方法栈，也是"),t("code",[v._v("线程私有的。")])])]),v._v(" "),t("li",[t("p",[v._v("允许被实现成固定或者可动态扩展的内存大小。（在内存溢出方面是相同的）")]),v._v(" "),t("p",[v._v("如果线程请求分配的栈容量超过本地方法栈允许的最大容量，Java虚拟机将会抛出一个StackoverflowError异常。")]),v._v(" "),t("p",[v._v("㘝本地方法栈可以动态扩展，并且在常是扩展的时候无法申请到足够的内存，或者在创建新的线程是没有足够的内存去创建对应的本地方法栈，那么Java虚拟机栈将会抛出一个OutOfMemoryError异常。")])]),v._v(" "),t("li",[t("p",[v._v("本地方法是使用C语言实现的。")])]),v._v(" "),t("li",[t("p",[v._v("它的具体做法是Native Method Stack中登记native方法，在Execution Engine执行时加载本地方法库。")])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202010/03/230742-366040.png",alt:"1601737662435"}})]),v._v(" "),t("p",[t("code",[v._v("当某个线程调用一个本地方法时，它就进入了一个全新的并且不再受虚拟机限制的世界。它和虚拟机拥有同样的权限。")])]),v._v(" "),t("ul",[t("li",[v._v("本地方法可以通过本地方法接口来"),t("code",[v._v("访问虚拟机内部的运行时数据区。")])]),v._v(" "),t("li",[v._v("它甚至可以直接使用本地处理器中的寄存器")]),v._v(" "),t("li",[v._v("直接从本地内存的堆中分配任意数量的内存。")])]),v._v(" "),t("p",[t("code",[v._v("并不是所有的JVM都支持本地方法。因为Java虚拟机规范并没有明确要求本地方法栈的使用语言、具体实现方式、数据结构等。")]),v._v("如果JVM产品不打算支持native方法，也可以无需实现本地方法栈。")]),v._v(" "),t("p",[v._v("在Hotspot JVM中，直接将本地方法栈和虚拟机栈合二为一。")])])}),[],!1,null,null,null);t.default=o.exports}}]);