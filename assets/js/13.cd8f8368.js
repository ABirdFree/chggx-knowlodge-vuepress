(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{335:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"枚举"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[s._v("#")]),s._v(" 枚举")]),s._v(" "),t("blockquote",[t("h2",{attrs:{id:"枚举的场景及历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举的场景及历史"}},[s._v("#")]),s._v(" 枚举的场景及历史")])]),s._v(" "),t("p",[s._v("枚举是一个被命名的整型常数的集合，用于声明一组带标识符的常数。枚举在曰常生活中很常见，例如一个人的性别只能是“男”或者“女”，一周的星期只能是 7 天中的一个等。类似这种当一个变量有几种固定可能的取值时，就可以将它定义为"),t("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("枚举类型"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("p",[s._v("在 JDK 1.5 之前没有枚举类型，那时候一般用接口常量来替代。而使用 Java 枚举类型 enum 可以更贴近地表示这种常量。")]),s._v(" "),t("h2",{attrs:{id:"_1-声明定义枚举"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明定义枚举"}},[s._v("#")]),s._v(" 1. 声明定义枚举")]),s._v(" "),t("p",[s._v("声明枚举时必须使用 enum 关键字，然后定义枚举的名称、可访问性、基础类型和成员等。枚举声明的语法如下：")]),s._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("modifiers "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("enumname")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("base")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("其中：")])]),s._v(" "),t("p",[s._v("enum-modifiers 表示枚举的修饰符主要包括 public、private 和 internal；")]),s._v(" "),t("p",[s._v("enumname 表示声明的枚举名称；")]),s._v(" "),t("p",[s._v("enum-base 表示基础类型；如果没有显式地声明基础类型的枚举，那么意味着它所对应的基础类型是 int。")]),s._v(" "),t("p",[s._v("enum-body 表示枚举的成员，它是枚举类型的命名常数。任意两个枚举成员不能具有相同的名称，且它的常数值必须在该枚举的基础类型的范围之内，多个枚举成员之间使用逗号分隔。")]),s._v(" "),t("p",[t("strong",[s._v("例 1:")])]),s._v(" "),t("p",[s._v("下面代码定义了一个表示性别的枚举类型 SexEnum ，一个表示颜色的枚举类型 Color。")]),s._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SexEnum")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    male"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("female"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Color")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("BLUE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("BLACK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("之后便可以通过枚举类型名直接引用常量，如 SexEnum.male、Color.RED。")]),s._v(" "),t("p",[s._v("使用枚举还可以使 switch 语句的可读性更强，例如以下示例代码：")]),s._v(" "),t("div",{staticClass:"language-csharp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-csharp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Signal")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义一个枚举类型")]),s._v("\n    GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("RED\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TrafficLight")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Signal")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("change")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h2",{attrs:{id:"_2-枚举类详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-枚举类详解"}},[s._v("#")]),s._v(" 2. 枚举类详解")]),s._v(" "),t("p",[t("strong",[s._v("Java 中的每一个枚举都继承自 java.lang.Enum 类")]),s._v("。当定义一个枚举类型时，每一个枚举类型成员都可以看作是 Enum 类的实例，这些枚举成员默认都被 final、public, static 修饰，当使用枚举类型成员时，直接使用枚举名称调用成员即可。")]),s._v(" "),t("p",[s._v("所有枚举实例都可以调用 Enum 类的方法，常用方法如表 1 所示。")]),s._v(" "),t("p",[s._v("表1 Enum类的常用方法")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("方法名称")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("values()")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("以数组形式返回枚举类型的所有成员")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("valueOf()")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("将普通字符串转换为枚举实例")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("compareTo()")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("比较两个枚举成员在定义时的顺序")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("ordinal()")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("获取枚举成员的索引位置")])])])]),s._v(" "),t("h3",{attrs:{id:"例-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例-1"}},[s._v("#")]),s._v(" 例 1")]),s._v(" "),t("p",[s._v("通过调用枚举类型实例的 values() 方法可以将枚举的所有成员以数组形式返回，也可以通过该方法获取枚举类型的成员。")]),s._v(" "),t("p",[s._v("下面的示例创建一个包含 3 个成员的枚举类型 Signal，然后调用 values() 方法输出这些成员。")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("enum Signal\n{\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("定义一个枚举类型\n    GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("RED;\n}\npublic static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n{\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(";i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("length")]),s._v(";i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"枚举成员："')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("[i]"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("输出结果如下：")]),s._v(" "),t("div",{staticClass:"language-undefined line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("枚举成员：GREEN\n枚举成员：YELLOW\n枚举成员：RED\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例-2"}},[s._v("#")]),s._v(" 例 2")]),s._v(" "),t("p",[s._v("创建一个示例，调用 valueOf() 方法获取枚举的一个成员，再调用 compareTo() 方法进行比较，并输出结果。具体实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" TestEnum\n{\n    public enum Sex\n    {\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("定义一个枚举\n        male"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("female;\n    }\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        compare"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Sex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("valueOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"male"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("比较\n    }\n    public static void compare"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Sex s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(";i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Sex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("length")]),s._v(";i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        {\n            System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"与"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("Sex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("[i]"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"的比较结果是："')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("compareTo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Sex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("[i]"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        }\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("上述代码中使用 Sex.valueOf(“male”) 取出枚举成员 male 对应的值，再将该值与其他枚举成员进行比较。")]),s._v(" "),t("p",[s._v("最终输出结果如下：\nmale与male的比较结果是：0\nmale与female的比较结果是：-1")]),s._v(" "),t("h3",{attrs:{id:"例-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例-3"}},[s._v("#")]),s._v(" 例 3")]),s._v(" "),t("p",[s._v("通过调用枚举类型实例的 ordinal() 方法可以获取一个成员在枚举中的索引位置。下面的示例创建一个包含 3 个成员的枚举类型 Signal，然后调用 ordinal() 方法输出成员及对应索引位置。")]),s._v(" "),t("p",[s._v("具体实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" TestEnum1\n{\n    enum Signal\n    {\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("定义一个枚举类型\n        GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("RED;\n    }\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(";i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("length")]),s._v(";i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        {\n            System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"索引"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("[i]"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ordinal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"，值："')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("Signal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("[i]"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        }\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("输出结果如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("索引"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，值：GREEN\n索引"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，值：YELLOW\n索引"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，值：RED\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_3-为枚举添加方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-为枚举添加方法"}},[s._v("#")]),s._v(" 3. 为枚举添加方法")]),s._v(" "),t("p",[s._v("Java 为枚举类型提供了一些内置的方法，同时枚举常量也可以有自己的方法。此时要注意必须在枚举实例的最后一个成员后添加分号，而且必须先定义枚举实例。")]),s._v(" "),t("p",[t("strong",[s._v("例 4：")])]),s._v(" "),t("p",[s._v("下面的代码创建了一个枚举类型 WeekDay，而且在该类型中添加了自定义的方法。")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("enum WeekDay\n{\n    Mon"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Monday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Tue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tuesday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Wed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wednesday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Thu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Thursday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Fri"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Friday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Sat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Saturday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sunday"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("以上是枚举的成员，必须先定义，而且使用分号结束\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),s._v(";\n    }\n    public static void printDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        switch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        {\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Mon"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Tue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Wed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Fri"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            case "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n                break;\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wrong number!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        }\n    }\n    public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" getDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),s._v(";\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br")])]),t("p",[s._v("上面代码创建了 WeekDay 枚举类型，下面遍历该枚举中的所有成员，并调用 printDay() 方法。示例代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n{\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WeekDay "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"====>"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("day")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n    WeekDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("printDay"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("输出结果如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("Mon"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Monday\nTue"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Tuesday\nWed"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Wednesday\nThu"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Thursday\nFri"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Friday\nSat"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Saturday\nSun"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Sunday\nFri\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("Java 中的 enum 还可以跟 Class 类一样覆盖基类的方法。下面示例代码创建的 Color 枚举类型覆盖了 toString() 方法。")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Test")]),s._v("\n{\n    public enum Color\n    {\n        RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"红色"')]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(",1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"绿色"')]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(",2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("WHITE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白色"')]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(",3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"黄色"')]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(",4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("成员变量\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name;\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("构造方法\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        {\n            this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("name;\n            this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n        }\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("覆盖方法\n        @Override\n        public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" toString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        {\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name;\n        }\n    }\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    {\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("输出：1-红色\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h2",{attrs:{id:"_4-enummap-与-enumset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-enummap-与-enumset"}},[s._v("#")]),s._v(" 4. EnumMap 与 EnumSet")]),s._v(" "),t("p",[s._v("为了更好地支持枚举类型，java.util 中添加了两个新类：EnumMap 和 EnumSet。使用它们可以更高效地操作枚举类型。")]),s._v(" "),t("h3",{attrs:{id:"_1-enummap-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-enummap-类"}},[s._v("#")]),s._v(" 1. EnumMap 类")]),s._v(" "),t("p",[s._v("EnumMap 是专门为枚举类型量身定做的 Map 实现。虽然使用其他的 Map（如 HashMap）实现也能完成枚举类型实例到值的映射，但是使用 EnumMap 会更加高效。")]),s._v(" "),t("p",[s._v("HashMap 只能接收同一枚举类型的实例作为键值，并且由于枚举类型实例的数量相对固定并且有限，所以 EnumMap 使用数组来存放与枚举类型对应的值，使得 EnumMap 的效率非常高。\n"),t("strong",[s._v("例5：")]),s._v("\n下面是使用 EnumMap 的一个代码示例。枚举类型 DataBaseType 里存放了现在支持的所有"),t("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B1%BB%E5%9E%8B&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据库类型"),t("OutboundLink")],1),s._v("。针对不同的数据库，一些数据库相关的方法需要返回不一样的值，例如示例中 getURL() 方法。")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("定义数据库类型枚举\npublic enum DataBaseType\n{\n    MYSQUORACLE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("DB2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("SQLSERVER\n}\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("某类中定义的获取数据库URL的方法以及EnumMap的声明\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" EnumMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("urls"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("new EnumMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\npublic DataBaseInfo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n{\n    urls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DB2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdbc:db2://localhost:5000/sample"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    urls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MYSQL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdbc:mysql://localhost/mydb"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    urls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ORACLE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdbc:oracle:thin:@localhost:1521:sample"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    urls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DataBaseType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SQLSERVER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdbc:microsoft:sqlserver://sql:1433;Database=mydb"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n}\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("根据不同的数据库类型，返回对应的URL\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("@param "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" DataBaseType 枚举类新实例\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\npublic "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" getURL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DataBaseType "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n{\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("urls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("在实际使用中，EnumMap 对象 urls 往往是由外部负责整个应用初始化的代码来填充的。这里为了演示方便，类自己做了内容填充。")]),s._v(" "),t("p",[s._v("从本例中可以看出，使用 EnumMap 可以很方便地为枚举类型在不同的环境中绑定到不同的值上。本例子中 getURL 绑定到 URL 上，在其他的代码中可能又被绑定到数据库驱动上去。")]),s._v(" "),t("h3",{attrs:{id:"_2-enumset-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-enumset-类"}},[s._v("#")]),s._v(" 2. EnumSet 类")]),s._v(" "),t("p",[s._v("EnumSet 是枚举类型的高性能 Set 实现，它要求放入它的枚举常量必须属于同一枚举类型。EnumSet 提供了许多"),t("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("工厂方法"),t("OutboundLink")],1),s._v("以便于初始化，如表 2 所示。")]),s._v(" "),t("p",[s._v("表2 EnumSet 类的常用方法")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("方法名称")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("allOf(Class element type)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("创建一个包含指定枚举类型中所有枚举成员的 EnumSet 对象")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("complementOf(EnumSet s)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("创建一个与指定 EnumSet 对象 s 相同的枚举类型 EnumSet 对象，并包含所有 s 中未包含的枚举成员")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("copyOf(EnumSet s)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("创建一个与指定 EnumSet 对象 s 相同的枚举类型 EnumSet 对象，并与 s 包含相同的枚举成员")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("noneOf(<Class elementType)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("创建指定枚举类型的空 EnumSet 对象")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("of(E first,e…rest)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("创建包含指定枚举成员的 EnumSet 对象")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("range(E from ,E to)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("创建一个 EnumSet 对象，该对象包含了 from 到 to 之间的所有枚举成员")])])])]),s._v(" "),t("p",[s._v("EnumSet 作为 Set 接口实现，它支持对包含的枚举常量的遍历。")]),s._v(" "),t("div",{staticClass:"language-scss line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Operation "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v("op")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("EnumSet."),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Operation.PLUS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("Operation.MULTIPLY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomeThing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("op"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("---------------------------------------------------------------------------------------")]),s._v(" "),t("h2",{attrs:{id:"_5-枚举的-7-种使用方法及为什么建议你使用枚举"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-枚举的-7-种使用方法及为什么建议你使用枚举"}},[s._v("#")]),s._v(" 5. 枚举的 7 种使用方法及为什么建议你使用枚举")]),s._v(" "),t("p",[s._v("枚举是 JDK 1.5 新增的数据类型，使用枚举我们可以很好的描述一些特定的业务场景，比如一年中的春、夏、秋、冬，还有每周的周一到周天，还有各种颜色，以及可以用它来描述一些状态信息，比如错误码等。")]),s._v(" "),t("p",[s._v("枚举类型不止存在在 Java 语言中，在其它语言中也都能找到它的身影，例如 C# 和 Python 等，但我发现在实际的项目中使用枚举的人很少，所以本文就来聊一聊枚举的相关内容，好让朋友们对枚举有一个大概的印象，这样在编程时起码还能想到有“枚举”这样一个类型。")]),s._v(" "),t("p",[s._v("本文的结构目录如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/436d5b0e54b7e59a6d8c6bf031e8c3a0.png",alt:"img"}})]),s._v(" "),t("h2",{attrs:{id:"_6-枚举的-7-种使用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-枚举的-7-种使用方法"}},[s._v("#")]),s._v(" 6. 枚举的 7 种使用方法")]),s._v(" "),t("p",[s._v("很多人不使用枚举的一个重要的原因是对枚举不够熟悉，那么我们就先从枚举的 7 种使用方法说起。")]),s._v(" "),t("h3",{attrs:{id:"_1-常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-常量"}},[s._v("#")]),s._v(" 1. 常量")]),s._v(" "),t("p",[s._v("在 JDK 1.5 之前，我们定义常量都是 "),t("code",[s._v("public static final...")]),s._v(" ，但有了枚举，我们就可以把这些常量定义成一个枚举类了，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public enum ColorEnum {  \n  RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW  \n} \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_2-switch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-switch"}},[s._v("#")]),s._v(" 2. switch")]),s._v(" "),t("p",[s._v("将枚举用在 switch 判断中，使得代码可读性更高了，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("enum ColorEnum {\n    GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" RED\n}\npublic "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" ColorTest {\n    ColorEnum color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED;\n \n    public void change"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        switch "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n            case RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("GREEN;\n                break;\n            case YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED;\n                break;\n            case GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("YELLOW;\n                break;\n        }\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h3",{attrs:{id:"_3-枚举中增加方法-该代码是常见的枚举定义模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-枚举中增加方法-该代码是常见的枚举定义模板"}},[s._v("#")]),s._v(" 3. 枚举中增加方法（该代码是常见的枚举定义模板）")]),s._v(" "),t("p",[s._v("我们可以在枚举中增加一些方法，让枚举具备更多的特性，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" EnumTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        ErrorCodeEnum errorCode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SUCCESS;\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"状态码："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" errorCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" \n                           "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 状态信息："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" errorCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n \nenum ErrorCodeEnum {\n    SUCCESS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    PARAM_ERROR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parameter error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    SYS_ERROR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"system error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    NAMESPACE_NOT_FOUND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"namespace not found"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    NODE_NOT_EXIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3002")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node not exist"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    NODE_ALREADY_EXIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3003")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node already exist"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    UNKNOWN_ERROR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unknown error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" msg;\n \n    ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(";\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("msg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" msg;\n    }\n \n    public int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(";\n    }\n \n    public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" msg;\n    }\n \n    public static ErrorCodeEnum getErrorCode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ErrorCodeEnum it "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("it"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" it;\n            }\n        }\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" UNKNOWN_ERROR;\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br")])]),t("p",[s._v("以上程序的执行结果为：状态码：1000 状态信息：success")]),s._v(" "),t("h3",{attrs:{id:"_4-覆盖枚举方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-覆盖枚举方法"}},[s._v("#")]),s._v(" 4. 覆盖枚举方法")]),s._v(" "),t("p",[s._v("我们可以覆盖一些枚举中的方法用于实现自己的业务，比如我们可以覆盖 "),t("code",[s._v("toString()")]),s._v(" 方法，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" EnumTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        ColorEnum colorEnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED;\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("colorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n \nenum ColorEnum {\n    RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"红色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"绿色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"黄色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("  成员变量\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name;\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("  构造方法\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name;\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n    }\n \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("覆盖方法\n    @Override\n    public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" toString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name;\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("以上程序的执行结果为：1：红色")]),s._v(" "),t("h3",{attrs:{id:"_5-实现接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-实现接口"}},[s._v("#")]),s._v(" 5. 实现接口")]),s._v(" "),t("p",[s._v("枚举类可以用来实现接口，但不能用于继承类，因为枚举默认继承了 "),t("code",[s._v("java.lang.Enum")]),s._v(" 类，在 Java 语言中允许实现多接口，但不能继承多个父类，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" EnumTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        ColorEnum colorEnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED;\n        colorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("print"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"颜色："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" colorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getInfo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n \ninterface Behaviour {\n    void print"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" getInfo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n}\n \nenum ColorEnum implements Behaviour {\n    RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"红色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"绿色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"黄色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name;\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name;\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n    }\n \n    @Override\n    public void print"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n \n    @Override\n    public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" getInfo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name;\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("p",[s._v("以上程序的执行结果为：")]),s._v(" "),t("p",[s._v("1：红色\n颜色：红色")]),s._v(" "),t("h3",{attrs:{id:"_6-在接口中组织枚举类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-在接口中组织枚举类"}},[s._v("#")]),s._v(" 6. 在接口中组织枚举类")]),s._v(" "),t("p",[s._v("我们可以在一个接口中创建多个枚举类，用它可以很好的实现“多态”，也就是说我们可以将拥有相同特性，但又有细微实现差别的枚举类聚集在一个接口中，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" EnumTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 赋值第一个枚举类\n        ColorInterface colorEnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorInterface"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED;\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("colorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 赋值第二个枚举类\n        colorEnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ColorInterface"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NewColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NEW_RED;\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("colorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n \ninterface ColorInterface {\n    enum ColorEnum implements ColorInterface {\n        GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" RED\n    }\n    enum NewColorEnum implements ColorInterface {\n        NEW_GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW_YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" NEW_RED\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("以上程序的执行结果为：")]),s._v(" "),t("p",[s._v("RED\nNEW_RED")]),s._v(" "),t("h3",{attrs:{id:"_7-使用枚举集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-使用枚举集合"}},[s._v("#")]),s._v(" 7. 使用枚举集合")]),s._v(" "),t("p",[s._v("在 Java 语言中和枚举类相关的，还有两个枚举集合类 "),t("code",[s._v("java.util.EnumSet")]),s._v(" 和 "),t("code",[s._v("java.util.EnumMap")]),s._v("，使用它们可以实现更多的功能。")]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("EnumSet")]),s._v(" 可以保证元素不重复，并且能获取指定范围内的元素，示例代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ArrayList;\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EnumSet;\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("List")]),s._v(";\n \npublic "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" EnumTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new ArrayList"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 重复元素\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 去掉重复数据\n        EnumSet"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" enumSet "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" EnumSet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("copyOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"去重："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" enumSet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 获取指定范围的枚举（获取所有的失败状态）\n        EnumSet"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" errorCodeEnums "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" EnumSet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("range"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ERROR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UNKNOWN_ERROR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"所有失败状态："')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" errorCodeEnums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n \nenum ColorEnum {\n    RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"红色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"绿色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"黄色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name;\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name;\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(";\n    }\n}\n \nenum ErrorCodeEnum {\n    SUCCESS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ERROR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parameter error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    SYS_ERROR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2002")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"system error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    NAMESPACE_NOT_FOUND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2003")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"namespace not found"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    NODE_NOT_EXIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3002")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node not exist"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    NODE_ALREADY_EXIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3003")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node already exist"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    UNKNOWN_ERROR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unknown error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(";\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" msg;\n \n    ErrorCodeEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(";\n        this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("msg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" msg;\n    }\n \n    public int "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("code")]),s._v(";\n    }\n \n    public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" msg;\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br")])]),t("p",[s._v("以上程序的执行结果为：")]),s._v(" "),t("p",[s._v("去重：[RED, GREEN, YELLOW]\n所有失败状态：[ERROR, SYS_ERROR, NAMESPACE_NOT_FOUND, NODE_NOT_EXIST, NODE_ALREADY_EXIST, UNKNOWN_ERROR]")]),s._v(" "),t("p",[t("code",[s._v("EnumMap")]),s._v(" 与 "),t("code",[s._v("HashMap")]),s._v(" 类似，不过它是一个专门为枚举设计的 "),t("code",[s._v("Map")]),s._v(" 集合，相比 "),t("code",[s._v("HashMap")]),s._v(" 来说它的性能更高，因为它内部放弃使用链表和红黑树的结构，采用数组作为数据存储的结构。")]),s._v(" "),t("p",[t("code",[s._v("EnumMap")]),s._v(" 基本使用示例如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("EnumMap;\n \npublic "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" EnumTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        EnumMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" enumMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new EnumMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        enumMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"红色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        enumMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"绿色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        enumMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"白色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        enumMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("put"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("YELLOW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"黄色"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" enumMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ColorEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n \nenum ColorEnum {\n    RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("以上程序的执行结果为：RED:红色")]),s._v(" "),t("h3",{attrs:{id:"使用注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用注意事项"}},[s._v("#")]),s._v(" 使用注意事项")]),s._v(" "),t("p",[s._v("阿里《Java开发手册》对枚举的相关规定如下，我们在使用时需要稍微注意一下。")]),s._v(" "),t("blockquote",[t("blockquote",[t("p",[t("strong",[s._v("【强制】所有的枚举类型字段必须要有注释，说明每个数据项的用途。")])])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("【参考】枚举类名带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。正例：枚举名字为 ProcessStatusEnum 的成员名称：SUCCESS / UNKNOWN_REASON。")])])])]),s._v(" "),t("h2",{attrs:{id:"假如不使用枚举"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#假如不使用枚举"}},[s._v("#")]),s._v(" 假如不使用枚举")]),s._v(" "),t("p",[s._v("在枚举没有诞生之前，也就是 JDK 1.5 版本之前，我们通常会使用 "),t("code",[s._v("int")]),s._v(" 常量来表示枚举，实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-php line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_RED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_BLUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword type-declaration"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_GREEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("但是使用 "),t("code",[s._v("int")]),s._v(" 类型可能存在两个问题：")]),s._v(" "),t("p",[s._v("第一，"),t("code",[s._v("int")]),s._v("类型本身并不具备安全性，假如某个程序员在定义"),t("code",[s._v("int")]),s._v("时少些了一个"),t("code",[s._v("final")]),s._v("关键字，那么就会存在被其他人修改的风险，而反观枚举类，它“天然”就是一个常量类，不存在被修改的风险（原因详见下半部分）；")]),s._v(" "),t("p",[s._v("第二，使用 "),t("code",[s._v("int")]),s._v(" 类型的语义不够明确，比如我们在控制台打印时如果只输出 1...2...3 这样的数字，我们肯定不知道它代表的是什么含义。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/641a5e76844ccdd75d933b8a3b2afc0b.png",alt:"img"}})]),s._v(" "),t("p",[s._v("那有人就说了，那就使用常量字符呗，这总不会还不知道语义吧？实现示例代码如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_RED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RED"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_BLUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BLUE"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COLOR_GREEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GREEN"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("但是这样同样存在一个问题，有些初级程序员会不按套路出牌，他们可能会直接使用字符串的值进行比较，而不是直接使用枚举的字段，实现示例代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Singleton {\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 枚举类型是线程安全的，并且只会装载一次\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" enum SingletonEnum {\n        INSTANCE;\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 声明单例对象\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" Singleton instance;\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 实例化\n        SingletonEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n            instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new Singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        }\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Singleton getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" instance;\n        }\n    }\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 获取实例（单例对象）\n    public static Singleton getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" SingletonEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("INSTANCE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n    }\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 类方法\n    public void sayHi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hi,Java."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" SingletonTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        Singleton singleton "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sayHi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("这样当我们修改了枚举中的值，那程序就凉凉了。")]),s._v(" "),t("h2",{attrs:{id:"枚举使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举使用场景"}},[s._v("#")]),s._v(" 枚举使用场景")]),s._v(" "),t("p",[s._v("枚举的常见使用场景是单例，它的完整实现代码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Singleton {\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 枚举类型是线程安全的，并且只会装载一次\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" enum SingletonEnum {\n        INSTANCE;\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 声明单例对象\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" Singleton instance;\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 实例化\n        SingletonEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n            instance "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" new Singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        }\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Singleton getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" instance;\n        }\n    }\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 获取实例（单例对象）\n    public static Singleton getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" SingletonEnum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("INSTANCE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" Singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n    }\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 类方法\n    public void sayHi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hi,Java."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" SingletonTest {\n    public static void main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("String")]),s._v("[] args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n        Singleton singleton "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n        singleton"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sayHi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(";\n    }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("因为枚举只会在类加载时装载一次，所以它是线程安全的，这也是《Effective Java》作者极力推荐使用枚举来实现单例的主要原因。")]),s._v(" "),t("h2",{attrs:{id:"知识扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知识扩展"}},[s._v("#")]),s._v(" 知识扩展")]),s._v(" "),t("h3",{attrs:{id:"枚举为什么是线程安全的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举为什么是线程安全的"}},[s._v("#")]),s._v(" 枚举为什么是线程安全的？")]),s._v(" "),t("p",[s._v("这一点要从枚举最终生成的字节码说起，首先我们先来定义一个简单的枚举类：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public enum ColorEnumTest {\n    RED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GREEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" YELLOW;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("然后我们再将上面的那段代码编译为字节码，具体内容如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Enum")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GREEN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BLANK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("YELLOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ColorEnumTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("从上述结果可以看出枚举类最终会被编译为被 "),t("code",[s._v("final")]),s._v(" 修饰的普通类，它的所有属性也都会被 "),t("code",[s._v("static")]),s._v(" 和 "),t("code",[s._v("final")]),s._v(" 关键字修饰，所以"),t("strong",[s._v("枚举类在项目启动时就会被 JVM 加载并初始化，而这个执行过程是线程安全的，所以枚举类也是线程安全的类。")])]),s._v(" "),t("blockquote",[t("p",[s._v("小贴士：代码反编译的过程是先用 javac 命令将 java 代码编译字节码（.class），再使用 javap 命令查看编译的字节码。")])]),s._v(" "),t("h3",{attrs:{id:"枚举比较小技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举比较小技巧"}},[s._v("#")]),s._v(" 枚举比较小技巧")]),s._v(" "),t("p",[s._v("我们在枚举比较时使用 == 就够了，因为枚举类是在程序加载时就创建了（它并不是 "),t("code",[s._v("new")]),s._v(" 出来的），并且枚举类不允许在外部直接使用 "),t("code",[s._v("new")]),s._v(" 关键字来创建枚举实例，所以我们在使用枚举类时本质上只有一个对象，因此在枚举比较时使用 == 就够了。")]),s._v(" "),t("p",[s._v("并且我们在查看枚举的 "),t("code",[s._v("equlas()")]),s._v(" 源码会发现，它的内部其实还是直接调用了 == 方法，源码如下：")]),s._v(" "),t("div",{staticClass:"language-cobol line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cobol"}},[t("code",[s._v("public "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" boolean equals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Object "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("other")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" {\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("other")]),s._v(";\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("本文我们介绍了枚举类的 7 种使用方法：常量、switch、枚举中添加方法、覆盖枚举方法、实现接口、在接口中组织枚举类和使用枚举集合等，然后讲了如果不使用枚举类使用 "),t("code",[s._v("int")]),s._v(" 类型和 "),t("code",[s._v("String")]),s._v(" 类型存在的一些弊端：语义不够清晰、容易被修改、存在被误用的风险，所以我们在适合的环境下应该尽量使用枚举类。并且我们还讲了枚举类的使用场景——单例，以及枚举类为什么是安全的，最后我们讲了枚举比较的小技巧，希望本文对你有帮助。")]),s._v(" "),t("p",[s._v("参考：https://blog.csdn.net/weixin_45433031/article/details/110727772")])])}),[],!1,null,null,null);t.default=e.exports}}]);