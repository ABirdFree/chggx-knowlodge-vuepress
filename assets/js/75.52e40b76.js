(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{422:function(t,a,s){"use strict";s.r(a);var r=s(2),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构与算法-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法-概述"}},[t._v("#")]),t._v(" 数据结构与算法-概述")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("总结笔记来源："),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1E4411H73v/",target:"_blank",rel:"noopener noreferrer"}},[t._v("尚硅谷-Java数据结构和算法"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_1-经典算法面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-经典算法面试题"}},[t._v("#")]),t._v(" 1. 经典算法面试题")]),t._v(" "),a("h3",{attrs:{id:"字符串匹配问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串匹配问题"}},[t._v("#")]),t._v(" 字符串匹配问题")]),t._v(" "),a("p",[a("strong",[t._v("问题：")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v('有一个字符串 str1= "aab aac aba baba aacaab"，和一个子串 str2="aac"')])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("现在要判断")]),t._v(" "),a("strong",[t._v("str1")]),t._v(" "),a("strong",[t._v("是否含有")]),t._v(" "),a("strong",[t._v("str2")]),t._v(", 如果存在，就返回第一次出现的位置, 如果没有，则返回-1")])]),t._v(" "),a("li",[a("p",[t._v("要求用最快的速度来完成匹配")])]),t._v(" "),a("li",[a("p",[t._v("你的思路是什么？")])])]),t._v(" "),a("p",[a("strong",[t._v("解题算法：")])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_46272350/article/details/120658494",target:"_blank",rel:"noopener noreferrer"}},[t._v("暴力匹配"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/dark_cy/article/details/88698736",target:"_blank",rel:"noopener noreferrer"}},[t._v("KMP算法"),a("OutboundLink")],1),t._v("《部分匹配表》")])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"汉诺塔游戏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#汉诺塔游戏"}},[t._v("#")]),t._v(" 汉诺塔游戏")]),t._v(" "),a("p",[a("strong",[t._v("问题：")])]),t._v(" "),a("p",[t._v("汉诺塔游戏, "),a("strong",[t._v("请完成汉诺塔游戏的代码")]),t._v(": 要求：")]),t._v(" "),a("ol",[a("li",[t._v("将A塔的所有圆盘移动到C塔。并且规定，在")]),t._v(" "),a("li",[t._v("小圆盘上不能放大圆盘，")]),t._v(" "),a("li",[t._v("在三根柱子之间一次只能移动一个圆盘")])]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202304032021529.png",alt:"image-20230403202151500"}}),t._v(" "),a("p",[a("strong",[t._v("解题算法：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_44398094/article/details/109920912",target:"_blank",rel:"noopener noreferrer"}},[t._v("分治算法"),a("OutboundLink")],1)])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"八皇后问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八皇后问题"}},[t._v("#")]),t._v(" 八皇后问题")]),t._v(" "),a("p",[a("strong",[t._v("问题：")])]),t._v(" "),a("p",[t._v("八皇后问题，是一个古老而著名的问题，是"),a("strong",[t._v("回溯算法的典型案例")]),t._v("。该问题是国际西洋棋棋手马克斯·贝瑟尔于1848年提出：在8×8格的国际象棋上摆放八个皇后，使其不能互相攻击，即："),a("strong",[t._v("任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法")]),t._v("。"),a("a",{attrs:{href:"https://www.novelgames.com/zh/queens/",target:"_blank",rel:"noopener noreferrer"}},[t._v("游戏演示"),a("OutboundLink")],1)]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202304032028230.png",alt:"image-20230403202807196"}}),t._v(" "),a("p",[a("strong",[t._v("解题算法：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/302415065",target:"_blank",rel:"noopener noreferrer"}},[t._v("回溯算法"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://baike.baidu.com/item/%E9%AB%98%E6%96%AF/24098",target:"_blank",rel:"noopener noreferrer"}},[t._v("高斯"),a("OutboundLink")],1),t._v("认为有76种方案。1854年在柏林的象棋杂志上不同的作者发表了40种不同的解，后来有人用图论的方法解出92种结果。计算机发明后，有多种计算机语言可以解决此问题")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"马踏棋盘算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#马踏棋盘算法"}},[t._v("#")]),t._v(" 马踏棋盘算法")]),t._v(" "),a("p",[a("strong",[t._v("问题：")])]),t._v(" "),a("p",[t._v("马踏棋盘算法介绍和游戏演示")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("马踏棋盘算法也被称为骑士周游问题")])]),t._v(" "),a("li",[a("p",[t._v("将马随机放在国际象棋的8×8棋盘Board[0～7][0～7]的某个方格中，马按走棋规则("),a("strong",[t._v("马走日字")]),t._v(")进行移动。要求每个方格只进入一次，走遍棋盘上全部64个方格")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://h5.17173.com/content/05252016/143559215.shtml",target:"_blank",rel:"noopener noreferrer"}},[t._v("游戏演示"),a("OutboundLink")],1)])])]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202304032035341.png",alt:"image-20230403203530306"}}),t._v(" "),a("p",[t._v("解题算法：")]),t._v(" "),a("p",[t._v("会使用到"),a("code",[t._v("图的深度优化遍历算法(DFS)")]),t._v(" + "),a("code",[t._v("贪心算法")]),t._v("优化。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_2-数据结构和算法的关系数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据结构和算法的关系数据"}},[t._v("#")]),t._v(" 2. 数据结构和算法的关系数据")]),t._v(" "),a("h3",{attrs:{id:"_2-1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-概述"}},[t._v("#")]),t._v(" 2.1 概述")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("data结构(structure)是一门研究组织数据方式的学科，有了编程语言也就有了数据结构.学好数据结构可以编写出更加漂亮,更加有效率的代码。")])]),t._v(" "),a("li",[a("p",[t._v("要学习好数据结构就要多多考虑如何将生活中遇到的问题,用程序去实现解决.")])]),t._v(" "),a("li",[a("p",[t._v("程序 = 数据结构 + 算法")])]),t._v(" "),a("li",[a("p",[t._v("数据结构是算法的基础, 换言之，想要学好算法，需要把数据结构学到位。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-2-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-问题"}},[t._v("#")]),t._v(" 2.2 问题：")]),t._v(" "),a("h4",{attrs:{id:"示例一-java代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例一-java代码"}},[t._v("#")]),t._v(" 示例一：Java代码")]),t._v(" "),a("blockquote",[a("p",[t._v("数据结构：单链表")])]),t._v(" "),a("p",[t._v("试写出用"),a("code",[t._v("单链表")]),t._v("表示的字符串类及字符串结点类的定义，并依次实现它的构造函数、以及计算串长度、串赋值、判断两串相等、求子串、两串连接、求子串在串中位置等7个成员函数")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java,Java, hello,world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" newStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数据结构与算法~"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//算法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newStr="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" newStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"示例二-五子棋程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例二-五子棋程序"}},[t._v("#")]),t._v(" 示例二：五子棋程序")]),t._v(" "),a("blockquote",[a("p",[t._v("数据结构：稀疏数组、二维数组")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202303301538684.png",alt:"202303301538684"}})]),t._v(" "),a("p",[t._v("如何判断游戏的输赢，并可以完成存盘退出和继续上局的功能")]),t._v(" "),a("p",[t._v("棋盘 => 二维数组 => (稀疏数组) => 写入文件  【存档功能】")]),t._v(" "),a("p",[t._v("读取文件 => 稀疏数组 => 二维数组  =>  棋盘 【接上局】")]),t._v(" "),a("h4",{attrs:{id:"示例三-约瑟夫-josephu-问题-丢手帕问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例三-约瑟夫-josephu-问题-丢手帕问题"}},[t._v("#")]),t._v(" 示例三：约瑟夫(Josephu)问题(丢手帕问题)")]),t._v(" "),a("blockquote",[a("p",[t._v("数据结构：单向环形链表")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Josephu  问题为：设编号为1，2，… n的n个人围坐一圈，约定编号为k（1<=k<=n）的人从1开始报数，数到m 的那个人出列，它的下一位又从1开始报数，数到m的那个人又出列，依次类推，直到所有人出列为止，由此产生一个出队编号的序列。")])]),t._v(" "),a("li",[a("p",[t._v("提示：用一个不带头结点的循环链表来处理Josephu 问题：先构成一个有n个结点的单循环链表（单向环形链表），然后由k结点起从1开始计数，计到m时，对应结点从链表中删除，然后再从被删除结点的下一个结点又从1开始计数，直到最后一个结点从链表中删除算法结束。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202303311240809.png",alt:"202303311240809"}})]),t._v(" "),a("h4",{attrs:{id:"示例四-其它常见算法问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例四-其它常见算法问题"}},[t._v("#")]),t._v(" 示例四：其它常见算法问题")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://chggx-typora.oss-cn-beijing.aliyuncs.com/typora/202303311241792.png",alt:"202303311241792"}})]),t._v(" "),a("p",[t._v("修路问题 => 最小生成树(加权值)【数据结构】+ 普利姆算法最")]),t._v(" "),a("p",[t._v("短路径问题  => 图+弗洛伊德算法")]),t._v(" "),a("p",[t._v("汉诺塔 => 分支算法")]),t._v(" "),a("p",[t._v("八皇后问题 => 回溯法")]),t._v(" "),a("h2",{attrs:{id:"_3-线性结构和非线性结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-线性结构和非线性结构"}},[t._v("#")]),t._v(" 3 线性结构和非线性结构")]),t._v(" "),a("h3",{attrs:{id:"_3-1-线性结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-线性结构"}},[t._v("#")]),t._v(" 3.1 线性结构")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("线性结构线性结构作为最常用的数据结构，其特点是数据元素之间存在一对一的线性关系")])]),t._v(" "),a("li",[a("p",[t._v("线性结构有两种不同的存储结构，即顺序存储结构和链式存储结构。顺序存储的线性表称为顺序表，顺序表中的存储元素是连续的")])]),t._v(" "),a("li",[a("p",[t._v("链式存储的线性表称为链表，链表中的存储元素不一定是连续的，元素节点中存放数据元素以及相邻元素的地址信息")])]),t._v(" "),a("li",[a("p",[t._v("线性结构常见的有：数组、队列、链表和栈。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-非线性结构非线性结构包括"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-非线性结构非线性结构包括"}},[t._v("#")]),t._v(" 3.2 非线性结构非线性结构包括：")]),t._v(" "),a("p",[t._v("二维数组，多维数组，广义表，树结构，图结构")])])}),[],!1,null,null,null);a.default=n.exports}}]);